!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CACHE_BLOCK_SIZE	dkh/workload.h	32;"	d
CACHE_LEN	dkh/workload.h	34;"	d
CACHE_SIZE	dkh/workload.h	33;"	d
DEBUG_OPTION	dkh/workload.h	36;"	d
GB	dkh/workload.h	29;"	d
KB	dkh/workload.h	27;"	d
MB	dkh/workload.h	28;"	d
READ	dkh/workload.h	23;"	d
WRITE	dkh/workload.h	24;"	d
del_st	dkh/workload.h	/^int del_st(struct stats *st)$/;"	f
disk_num	dkh/workload.h	/^  int disk_num;$/;"	m	struct:workload
host	dkh/workload.h	/^  char *host;$/;"	m	struct:workload
init_stats	dkh/workload.h	/^struct stats *init_stats(void)$/;"	f
main	main.c	/^int main(int argc, char *argv[]){$/;"	f
max	dkh/workload.h	/^  long max;$/;"	m	struct:stats
max_time	dkh/workload.h	/^  char max_time[20];$/;"	m	struct:stats
min	dkh/workload.h	/^  long min;$/;"	m	struct:stats
min_time	dkh/workload.h	/^  char min_time[20];$/;"	m	struct:stats
offset	dkh/workload.h	/^  double offset;$/;"	m	struct:workload
open_workload	dkh/workload.h	/^FILE *open_workload(char *file)$/;"	f
read_column	dkh/workload.h	/^int read_column(struct workload *wl, char *buf)$/;"	f
read_workload	dkh/workload.h	/^int read_workload(FILE *fp, char *file_name)$/;"	f
report_st	dkh/workload.h	/^void report_st(struct stats *st, char *fn)$/;"	f
respone	dkh/workload.h	/^  long respone; \/\/respones time$/;"	m	struct:workload
run_cache	dkh/workload.h	/^int run_cache(struct stats *st, struct workload *wl)$/;"	f
size	dkh/workload.h	/^  double size;$/;"	m	struct:workload
stats	dkh/workload.h	/^struct stats$/;"	s
time	dkh/workload.h	/^  char *time;$/;"	m	struct:workload
type	dkh/workload.h	/^  int type;$/;"	m	struct:workload
workload	dkh/workload.h	/^struct workload$/;"	s
